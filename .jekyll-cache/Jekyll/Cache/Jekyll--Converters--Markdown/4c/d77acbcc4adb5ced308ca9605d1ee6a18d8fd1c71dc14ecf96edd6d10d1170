I"s<h1 id="about-r">About R</h1>
<p>R is a heavily Statistics focused programming language and is particularly common when statistical analysis is a core element of your work. Originally built with statisticians in mind, R does very well for visualising statistical concepts. It is a procedural language and may have a lower onboarding curve for some beginners who have less experience with programming because of RStudio, a relatively intiutive tool for working with R.</p>

<h2 id="visualization-packages">Visualization packages</h2>
<ul>
  <li><a href="https://ggplot2.tidyverse.org/">ggplot2</a> - grammar of graphics
    <ul>
      <li>Not for higher complexity; best for smaller</li>
      <li>Grammar of Graphics breaks data visualization into semantic concepts</li>
      <li>Think of this as “layering” parts of a visualization</li>
      <li>This is one of the most popular R packages and was intended as a replacement for defaults included in R</li>
      <li>ggplot2 allows users to be modular in how they chart and how they load information into a chart. What this means is that you can adjust at a high level of granularity.</li>
    </ul>
  </li>
  <li><a href="https://patchwork.data-imaginist.com/">patchwork</a> - presenting ggplot2 charts next to each other
    <ul>
      <li>Literally a tool for patching them together nicely</li>
    </ul>
  </li>
  <li><a href="https://davidgohel.github.io/ggiraph/">ggiraph</a>
    <ul>
      <li>Adds dynamic components onto ggplot2 graphs</li>
      <li>Tooltips, javascript actions on click, and a way to reference a specific element of the plot</li>
      <li>Allows export to SVG as well, just extends ggplot2 and htmlwidgets</li>
    </ul>
  </li>
  <li><a href="https://plotly.com/r/">Plotly</a>
    <ul>
      <li>Plot.ly is essentially an online version of ggplot2 and has since become an open source tool that can be used through R, Python, and Julia</li>
      <li>It’s incredibly powerful and has chart types that are not necessarily available to you elsewhere</li>
      <li>Has a relatively new component called “dash” for creating dashboards, generally references as more of a Python tool but can be used with R and Julia as well</li>
    </ul>
  </li>
  <li><a href="https://www.htmlwidgets.org/">htmlwidgets</a>
    <ul>
      <li>A way to use JavaScript visualization libraries at the R console, without needing to know Javascript – an example of a useful JS lib you are likely to hear about is D3.js</li>
      <li>You can embed widgets in R Markdown documents and Shiny web applications</li>
      <li>Can handle larger datasets depending on how you’re using it</li>
    </ul>
  </li>
  <li><a href="https://dygraphs.com/">dygraphs</a>
    <ul>
      <li>Also brings javascript into R</li>
      <li>Core benefits of dygraphs is that it is designed with very large datasets in mind and is interactive out of the box</li>
      <li>For instance some forms of interactivity are added on to packages like ggplot2 but in this case they’re built in</li>
    </ul>
  </li>
</ul>

<p>While we aren’t going into maps in this session a few packages to be aware of:</p>
<ul>
  <li><a href="https://cran.r-project.org/web/packages/mapboxer/vignettes/mapboxer.html">mapboxr</a> - MapBox in R</li>
  <li><a href="https://rstudio.github.io/leaflet/">leaflet</a> - package for working with leaflet.js in R</li>
  <li><a href="https://cran.r-project.org/web/packages/geofacet/vignettes/geofacet.html">geofacet</a> - extends ggplot2 to work with geodata</li>
</ul>

<h2 id="bringing-it-all-together-into-a-dashboard">Bringing it all together into a dashboard</h2>
<ul>
  <li><a href="https://rmarkdown.rstudio.com/flexdashboard/">flexdashboard</a>
    <ul>
      <li>Can be used with RMarkdown or Shiny</li>
    </ul>
  </li>
  <li><a href="https://rmarkdown.rstudio.com/">RMarkdown</a>
    <ul>
      <li>RMarkdown can be a component of a lot of different things, very flexible</li>
      <li>RNotebooks - more interactive RMarkdown files and by default possible with all RMarkdown files created via RStudio</li>
      <li><a href="https://bookdown.org/yihui/rmarkdown/dashboards.html">Example RMarkdown dashboards</a></li>
    </ul>
  </li>
  <li><a href="https://shiny.rstudio.com/">RShiny</a>
    <ul>
      <li>Robust web framework for developing apps, not just dashboards</li>
      <li>Relatively easy and intuitive compared to other alternatives because it includes more structural elements and styling out of the box; can be a bit harder to customize as a result</li>
      <li>While very large apps can be a bit laggy but RShiny is best when working with data that you can’t fully expose or need to store in a database</li>
      <li><a href="https://demo.appsilon.ai/">Example RShiny Apps</a></li>
    </ul>
  </li>
</ul>

<h2 id="a-note-about-working-with-r">A note about working with R</h2>
<p>While you can work with R in a number of ways the most common tool is RStudio which is a robust multi-purpose programming environment built around R.</p>

<p><a href="https://rstudio.com/products/rstudio/">RStudio</a></p>
<ul>
  <li>Open Source edition is free for local access</li>
  <li>Many features for workflow management</li>
</ul>

<p><a href="https://rstudio.com/products/rstudio/">RStudio Server</a></p>
<ul>
  <li>Allows you to edit in the cloud which can save on RAM.</li>
</ul>

<p>You can also use <a href="https://login.rstudio.cloud">RStudio in the cloud</a> for free for smaller tasks.</p>
:ET